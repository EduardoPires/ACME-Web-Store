@using Acme.Store.Business.Interfaces.Repositories
@using Acme.Store.Business.Models
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> _signInManager
@inject IVendedorRepository _vendedorRepository

<ul class="navbar-nav">
    @if (_signInManager.IsSignedIn(User))
    {
        var vendedor = await _vendedorRepository.ObterPorEmail(User.Identity?.Name);
        var nome = vendedor?.Nome ?? User.Identity?.Name;

        <li class="nav-item">
            <a class ="nav-link text-dark">Olá @nome!</a>
        </li>
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="fa-solid fa-gear"></i>
            </a>
            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Sua conta</a>
                </li>
                <li class="nav-item">
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="dropdown-item">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="btn btn-success" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
